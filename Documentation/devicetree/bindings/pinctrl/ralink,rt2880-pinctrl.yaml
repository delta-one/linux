# SPDX-License-Identifier: GPL-2.0-only OR BSD-2-Clause
%YAML 1.2
---
$id: http://devicetree.org/schemas/pinctrl/ralink,rt2880-pinctrl.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

title: Ralink RT2880 Pin Controller

maintainers:
  - Arınç ÜNAL <arinc.unal@arinc9.com>
  - Sergio Paracuellos <sergio.paracuellos@gmail.com>

<<<<<<< HEAD
description: |
=======
description:
>>>>>>> b7ba80a49124 (Commit)
  Ralink RT2880 pin controller for RT2880 SoC.
  The pin controller can only set the muxing of pin groups. Muxing individual
  pins is not supported. There is no pinconf support.

properties:
  compatible:
    const: ralink,rt2880-pinctrl

patternProperties:
  '-pins$':
    type: object
<<<<<<< HEAD
    additionalProperties: false

=======
>>>>>>> b7ba80a49124 (Commit)
    patternProperties:
      '^(.*-)?pinmux$':
        type: object
        description: node for pinctrl.
        $ref: pinmux-node.yaml#
<<<<<<< HEAD
        additionalProperties: false

        properties:
          function:
            description:
              A string containing the name of the function to mux to the group.
            enum: [gpio, i2c, spi, uartlite, jtag, mdio, sdram, pci]

          groups:
            description:
              An array of strings. Each string contains the name of a group.
            maxItems: 1
=======

        properties:
          groups:
            description: The pin group to select.
            enum: [i2c, spi, uartlite, jtag, mdio, sdram, pci]

          function:
            description: The mux function to select.
            enum: [gpio, i2c, spi, uartlite, jtag, mdio, sdram, pci]
>>>>>>> b7ba80a49124 (Commit)

        required:
          - groups
          - function

<<<<<<< HEAD
        allOf:
          - if:
              properties:
                function:
                  const: gpio
            then:
              properties:
                groups:
                  enum: [i2c, spi, uartlite, jtag, mdio, sdram, pci]

          - if:
              properties:
                function:
                  const: i2c
            then:
              properties:
                groups:
                  enum: [i2c]

          - if:
              properties:
                function:
                  const: spi
            then:
              properties:
                groups:
                  enum: [spi]

          - if:
              properties:
                function:
                  const: uartlite
            then:
              properties:
                groups:
                  enum: [uartlite]

          - if:
              properties:
                function:
                  const: jtag
            then:
              properties:
                groups:
                  enum: [jtag]

          - if:
              properties:
                function:
                  const: mdio
            then:
              properties:
                groups:
                  enum: [mdio]

          - if:
              properties:
                function:
                  const: sdram
            then:
              properties:
                groups:
                  enum: [sdram]

          - if:
              properties:
                function:
                  const: pci
            then:
              properties:
                groups:
                  enum: [pci]

allOf:
  - $ref: pinctrl.yaml#
=======
        additionalProperties: false

    additionalProperties: false

allOf:
  - $ref: "pinctrl.yaml#"
>>>>>>> b7ba80a49124 (Commit)

required:
  - compatible

additionalProperties: false

examples:
<<<<<<< HEAD
=======
  # Pinmux controller node
>>>>>>> b7ba80a49124 (Commit)
  - |
    pinctrl {
      compatible = "ralink,rt2880-pinctrl";

      i2c_pins: i2c0-pins {
        pinmux {
          groups = "i2c";
          function = "i2c";
        };
      };
    };
